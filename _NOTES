###############################RESOURCES###############################
#OS Activities
http://10.50.22.197:8000/
#Student Guide
https://os.cybbh.io/public
stack number: 2
10.50.38.199


###############################ACTIVITIES LOG###############################
#username
JOBO-M-006
#pw hint
Favorite DS3 knight
###############################BLANK###############################
##############################################################DAY 1##############################################################
###############################REMOTE COMMAND###############################
https://cctc.cybbh.io/students/students/latest/Day_0_Setup.html

#command for xfreerdp
xfreerdp /u:$USER /v:$IP_ADDRESS> /dynamic-resolution +glyph-cache +clipboard
xfreerdp /u:student /v:10.50.38.199 /dynamic-resolution +glyph-cache +clipboard


###############################END###############################
###############################$PROFILE###############################
$PROFILE 
PowerShell supports several profile files and host programs, like Windows, support their own specific profiles. 
The profiles below are listed in order of precedence with the first profile having the highest precedence.

All Users, All Hosts
$PsHome\Profile.ps1

All Users, Current Host
$PsHome\Microsoft.PowerShell_profile.ps1

Current User, All Hosts
$Home\[My]Documents\Profile.ps1

Current User, Current Host
$Home\[My ]Documents\WindowsPowerShell\Profile.ps1







###############################END###############################
###############################PRIMER QUESTIONS###############################
PRIMER #1
Which program starts with every CMD and PowerShell instance in Windows 7 and later?
conhost.exe


PRIMER #2
What Windows 10 feature supports installing Linux subsystem?
WSL


PRIMER #3
Which Windows feature can be used to interact with any CLI on the Windows system concurrently using multiple tabs?
windows terminal

PRIMER #4
What was the default shell (command line) of Windows versions Windows 2000 through Windows 8.1?
cmd.exe

PRIMER #5
What data type do all cmd.exe commands return?
string

PRIMER #6
What framework is PowerShell built on?
.net

PRIMER #7
"What will all of the below give you?

(get-host).version

$host.version

$psversiontable.psversion"
Powershell version



PRIMER #8
After PowerShell Core is installed what CLI command launches it?
pwsh.exe

PRIMER #9
"After PowerShell Core is installed you can still run the built in version of PowerShell side-by-side. 
What CLI command will launch the built in version?"
powershell.exe


###############################END###############################
###############################POWER SHELL QUESTIONS###############################
#1
Windows_PowerShell_Basics1
What syntax do PowerShell cmdlets follow?
verb-noun

#2
Windows_PowerShell_Basics2
What PS command will list all PowerShell cmdlets?
get-command

#3
Windows_PowerShell_Basics3
What PowerShell command will list all verbs?
get-verb

#4
Windows_PowerShell_Basics4
BASH commands output strings. PowerShell commands output what data type?
objects

#5
Windows_PowerShell_Basics5
All PowerShell objects are comprised of what two things?
Flag format: things,things
properties, methods
#6
Windows_PowerShell_Basics6
What command will list all things that make up a PowerShell object?
get-member

#7
Windows_PowerShell_Alias1
What PowerShell command will list PowerShell aliases?
get-alias

#8
Windows_PowerShell_Alias2
What PowerShell command lists all of the contents of a directory?
get-childitem


#9
Windows_PowerShell_Help1
What is the basic cmdlet that displays help about Windows Powershell cmdlets and concepts?
get-help


#10
Windows_PowerShell_Help2
PowerShell "help files" don't show the entire help file with a basic command. What switch option shows the entire help file?
-full

#11
Windows_PowerShell_Help3
What PowerShell command will update the PowerShell "help files" to the latest version?
update-help

#12
Windows_PowerShell_Help 4
What help switch will show you the "help files" on Microsoft's website, in your default browser?
-online

#13
Windows_PowerShell_Interaction1
What command will start the Chrome browser on your machine?
start chrome

#14
Windows_PowerShell_Interaction2
What command using a PS Method will stop chrome?
Flag is the full command.
(get-process chrome).kill()

#15
Windows_PowerShell_Interaction3
What PowerShell command (without using a method) will stop the Chrome process?
stop-process -name chrome


#16
Windows_PowerShell_CimClasses1
PowerShell doesn't have a native cmdlet that will give you processor information (such as get-processor or get-cpu). 
Knowing this information might be necessary. What command would give you information about the system's processor?
Flag is the full command
Get-WmiObject Win32_Processor


#17
Windows_PowerShell_Logic1
What PowerShell command will read a text file?
get-content

#18
Windows_PowerShell_Logic2
What PowerShell command will allow for counting lines in a file, averaging numbers, and summing numbers?
measure-object


#19
Windows_PowerShell_Regex_1
What PowerShell command searches for text patterns in a string?
select-string


#20
Windows_PowerShell_Basics_7
Users' files are stored in their corresponding home directory. What is the literal path to all home directories on a Windows 10 system?
C:\users\


#21
Windows_PowerShell_Basics_8
How many properties are available for the get-process cmdlet?
Note: Property values only
(get-process | get-member -membertype property).count
52

#22
Windows_PowerShell_Alias3
How many aliases does PowerShell have for listing the contents of a directory?
3

#23
Windows_PowerShell_Help 5
When requesting the help file for the get-process cmdlet, what full command is the 9th example given?
get-process powershell

#24
Windows_PowerShell_CimClasses2
To complete this challenge, find the description of the Lego Land service.
Reminder: All challenges are done using the file-server.
Get-WmiObject win32_servie | ?{$_.Name -like "Legoland"} | select Description
i_love_legos

#25
Windows_PowerShell_Logic3
In the CTF folder on the CTF User's Desktop, count the number of words in words2.txt.
get-content words2.txt | measure-object -word
5254 words


#26
Windows_PowerShell_Logic4
Count the number of files in the Videos folder in the CTF user's home directory.
(get-childitem | measure-object).count
925 files

#27
Windows_PowerShell_Logic5
Find the only line that makes the two files in the CTF user's Downloads folder different.
Hint The flag is the string (not line number).
compare-object -referenceobject (get-content old.txt) -differenceobject (get-content new.txt)
popeye

#28
Windows_PowerShell_Logic6
The password is the 21st line from the top, in ASCII alphabetically-sorted, descending order of the words.txt file.
**Note: File Location - C:\Users\CTF\Desktop\CTF
get-content words.txt | sort-object -descending | select-object -index 21
ZzZp

#29
Windows_PowerShell_Logic7
Count the number of unique words in words.txt
**Note: File Location - C:\Users\CTF\Desktop\CTF
(get-content words.txt | sort-object | get-unique).count
456976

#30
Windows_PowerShell_Basics_9
How many methods are available for the get-process cmdlet?
Machine: Admin_Station
(get-process | get-member -membertype method).count

#31
Windows_Powershell_Logic_8
Count the number of folders in the Music folder in the CTF user’s profile.
(get-childitem -recurse | where-object {$_.PSIsContainer}).count
411

#32
Windows_PowerShell_Regex_2
Count the number of times, case-insensitive, gaab is listed in words.txt **Note: File Location - C:\Users\CTF\Desktop\CTF
(get-content words.txt | select-string -allmatches "gaab").count
1

#33
Windows_PowerShell_Regex_3
Count the number of words, case-insensitive, with either a or z in a word, in the words.txt file
Note: File Location - C:\Users\CTF\Desktop\CTF
(get-content words.txt | where-object { $_ -match '(a|z)'}).count
160352

#34
Windows_PowerShell_Regex_4
Count the number of lines, case-insensitive, that a or z appears in the words.txt file
Note: File Location - C:\Users\CTF\Desktop\CTF
(get-content words.txt | where-object { $_ -match '(az)'}).count
2754

#35
Windows_PowerShell_Logic_9
Use a PowerShell loop to unzip the Omega file 1,000 times and read what is inside.
Note: Make sure you back up the .zip file to a different directory before attempting this challenge.
for($i=1000;$i -gt 0; $i--){expand-archive -path ".\omega${i}.zip";mv "omega${i}\omega$($i-1).zip"}
expand-archive .\omega1.zip
cd omega1
expand-archive.\omega1.zip
cd omega1
get-content .\omega1.txt
kung-fu

#36
Windows_PowerShell_Regex_5
Count the number of words in words.txt that meet the following criteria:
a appears at least twice consecutively
and is followed immediately by any of the letters a through g
Note: File Location - C:\Users\CTF\Desktop\CTF
Example: aac...aaa...
(get-content words.txt | where-object { $_ -match '((aa)[a-g])}).count
357

###############################END###############################
###############################POWERSHELL_PRIFILES###############################
#1
Windows_PowerShell_Profiles1
Which PowerShell profile has the lowest precedence?
Current User, Current Host


#2
Windows_PowerShell_Profiles2
Which PowerShell profile has the highest precedence?
All Users, All Hosts

#3
Windows_PowerShell_Profiles3
Which PowerShell variable stores the current user’s home directory?
$HOME

#4
Windows_PowerShell_Profiles4
Which PowerShell variable stores the installation directory for PowerShell?
$PsHome

#5
Windows_PowerShell_Profiles5
Which PowerShell variable stores the path to the "Current User, Current Host" profile?
$Profile

#6
Windows_PowerShell_Profiles6
What command would you run to view the help for PowerShell Profiles?


#7

#8



###############################END###############################



##############################################################END OF DAY 1##############################################################
##############################################################DAY 2##############################################################
###############################WINDOWS REGISTRY###############################
1. Windows Registry Introduction
The The Windows Registry is a central hierarchical database used in Windows to store information that is necessary to configure the system for one or more users, applications, and hardware devices.

Think of the Windows Registry like a huge Rolodex.

everything in Windows has a card/place with all of it’s information.

Includes location, information, settings, options, and other values for programs and hardware installed

Why is the registry important?

Anyone can hide all sorts of data including passwords, malicious code, and executable/binary files in the Registry.

They can effectively hide data in registry keys’ value entries.

By using different encoding techniques, they could obfuscate or hide data from forensic examiners.

It is important to know what right looks like and the places that are most likely to be compromised by a malicious actor.

Comparing the Registry in Windows to Linux
The registry in Windows is like a combination of multiple directories in Linux.

For example: Driver information is kept in the registry in Windows, but in /dev in Linux.

System configurations in Windows are in HKEY_LOCAL_MACHINE, but in /etc (and a few other directories) in Linux.

2. Registry structure
2.1 Registry Keys and Values
The registry is comprised of Keys, Subkeys and Values structured in a tree format.

Keys - are known as Registry Hives and can contain subkeys and values.

Subkeys - can contain subkeys and values

Values - contain data in specific formats.

2.2 Registry Hives or Root Keys
A registry hive is a group of keys and thier associated values that are loaded when the system is started or a specific user logs in.

There are five Registry Hives

HKEY_LOCAL_MACHINE

HKEY_USERS

HKEY_CURRENT_USERS

HKEY_CURRENT_CONFIG

HKEY_CLASSES_ROOT



HKEY_LOCAL_MACHINE (HKLM)
Contains configuration information for the entire computer. Its values are read every time the machine is started regardless of the user who logs in. Its subkeys are :
HARDWARE - contains a database of installed devices along with their drivers
SAM - Security Account Manager stores user and group accounts along with NTLM hashes of passwords
Security - Local Security policy accessed by lsass.exe used to determine rights and permissions for users on the machine
System - Contains keys pertaining to system startup such as programs started on boot or driver load order.



HKEY_USERS (HKU)
Contains all all user profiles on the system. Contains one key per user on the system. 
Each key is named after the SID(Security Identifier) of the user.

-User Environment settings for the desktop
-shortcuts
-File associations

A SID has four components:
SID = S-1-5-21-2948704478-3101701159-1111693228-1002
S represents SID
1 revision level (1) - Indicates the version of the SID structure that’s used in a particular SID.
An identifier authority (5, NT Authority) - Identifier Authority: This is a series of digits that identifies the entity that issued the SID. 
In the case of Active Directory, the identifier authority is always "5" for the Security IDentifier Authority (SID Authority).
A domain identifier 21-2948704478-3101701159-1111693228 (48 bit (6 byte) numbers)

Some HKEY_USERS are called Well Known SIDs.. They identify default accounts in Windows used for various purposes. 
In this example the 21 represents the subauthority within the domain identifier. Examples include:
S-1-5-18 refers to LocalSystem account.
S-1-5-19 refers to LocalService account. It is used to run local services that do not require LocalSystem account.
S-1-5-20 refers to NetworkService account. It is used to run network services that do not require LocalSystem account.
S-1-5-21-domain-500 Refers to the built in local administrator account.
-1002 = RID A variable number of subauthority or relative identifier (RID) values that uniquely identify the trustee relative to the authority that issued the SID




HKEY_CURRENT_USER (HKCU)
HKEY_CURRENT_USER is the copy of the logged in user’s registry key based on thier SID from HKEY_USERS.

HKEY_USERS (HIVE)
              └──SID (S-1-5-21-3939661428-3032410992-3449649886-XXXX) (Key)
HKEY_USERS\S-1-5-21-3939661428-3032410992-3449649886-XXXX



HKEY_CURRENT_CONFIG (HKCC)
HKEY_CURRENT_CONFIG is a symbolic link (pointer or shortcut or alias) to the following registry key:

HKEY_Local_Machine (HIVE)
              └──SYSTEM (Key)
                      └──CurrentControlSet (Subkey)
                                    └── Hardware Profiles (Subkey)
                                                └── Current (Subkey)
HKEY_LOCAL_MACHINE\System\CurrentControlSet\Hardware Profiles\Current




HKEY_CLASSES_ROOT (HKCR)
HKEY_CLASSES_ROOT is a symbolic link (pointer or shortcut or alias) to the following registry key:

HKEY_Local_Machine (HIVE)
              └──Software (Key)
                      └──Classes (Subkey)
HKEY_LOCAL_MACHINE\Software\Classes

Contains file name extension associations and COM class registration information such as ProgIDs, CLSIDs, and IIDs.

It is primarily intended for compatibility with the registry in 16-bit Windows

###############################END###############################
###############################BLANK###############################
2.3 Registry Structure and Data Types


Table 1. Registry Path Hive and Supporting Files
HKLM\SAM

SAM, SAM.LOG

HKLM\SECURITY

SECURITY, SECURITY.LOG

HKLM\SOFTWARE

software, software.LOG, software.sav

HKLM\SYSTEM

system, system.LOG, system.sav

HKLM\HARDWARE

(Dynamic/Volatile Hive)

HKU\.DEFAULT

default, default.LOG, default.sav

HKU\SID

NTUSER.DAT

HKU\SID_CLASSES

UsrClass.dat, UsrClass.dat.LOG

The above Table shows the registry path and their corresponding hives on disk.

All hives in HKLM are stored in %SYSTEMROOT%\System32\config\ (%SYSTEMROOT% usually refers to C:\WINDOWS).

HKLM\HARDWARE is a dynamic hive that is created each time the system boots and it is created and managed entirely in memory.

HKU\SID hive file is stored in user home directory, which is %USERPROFILE%\NTUSER.DAT.

HKU\SID_CLASSES hive file correspond to "%USERPROFILE%\Application Data\Local\Microsoft\Windows\UsrClass.dat"

Table 2. Types of extensions and what they mean (Might be hidden)
No extension

Actual Hive File

.alt extension

Backup copy of hive, used in Windows 2000

.log extension

Transaction log of changes to a hive

.sav extension

Backup copy of hive created at the end of text-mode (console)







###############################END###############################
###############################BLANK###############################
3. Registry Manipulation
3.1 View/manipulate the registry with a GUI
regedit.exe

GUI

Located at C:\Windows\regedit.exe

Can connect to a remote registry, but only using the PC’s workgroup or domain Name

Needs the RemoteRegistry Service (svchost.exe / regsvc.dll) to be running to work

Commonly disabled using group policy

Can load hives files from disk to the active registry

Can export binary .hiv files as well as text .reg files

Can only query HKLM and HKU remotely

Regedit.exe shares similarities with the C: drive file hierarchy. Keys can be manipulated just like files.
Using Regedit.exe to query the Registry
Click on the search bar and type in regedit.exe
If prompted by UAC, click yes
Click on the drop down for HKEY_CURRENT_USER
Click the drop down for Software
Click the drop down for Microsoft
Click the drop down for Windows
Click the drop down for CurrentVersion
Click the drop down for Run
We have successfully queried a key using regedit.exe


3.2 View/manipulate the registry via CMDLINE
reg.exe

CLI

Located at C:\Windows\System32\reg.exe

Can connect to a remote registry, using the PC’s NetBios Name or IP address

Does not have to be in workgroup/domain. Only need username/password

Needs the RemoteRegistry Service (svchost.exe / regsvc.dll) to be running to work

Can load hives files from disk to the active registry

Available in XP and beyond

Can only export text .reg files

Can only query HKLM and HKU remotely

Reg.exe Syntax

More Reg.exe Syntax

Reg.exe help
reg /?                    #Displays help for all of the reg.exe commands
reg query /?              #Displays help for the `reg query`
reg add /?                #Displays help for `reg add`
reg delete /?             #Displays help for `reg delete`
Reg query - Reads keys from specific registry locations
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
Reg add - Adds keys to specific registry locations
reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v testme /t REG_SZ /d C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
The /v stands for Value; In this case the name of this Key Value.

The /t stands for Type; Types can be any of the Data Types that we went over earlier.

The /d stands for Data; Is what is the actual Data or in this case a command to open a file every time the system is ran.

Reg delete - Deletes Keys
reg delete HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v testme
3.3 Registry Manipulation with PowerShell


Certain Root Hives are loaded automatically into PSDrives (HKLM: and HKCU:); navigation of the registry is very similar to folder⇒file

Minimum commands to know
Query

Get-ChildItem cmdlet gets the items in one or more specified locations.

Get-ItemProperty cmdlet gets the items in one or more specified locations.

Get-Item cmdlet gets the item at the specified location. It doesn’t get the contents of the item at the location unless you use a wildcard character (*) to request all the contents of the item.

Modify

Set-ItemProperty cmdlet changes the value of the property of the specified item. example, changing setting to :true or :false.

Remove-ItemProperty cmdlet to delete registry values and the data that they store.

Create

New-Item cmdlet creates a new item and sets its value. In the registry, New-Item creates registry keys and entries.

New-Itemproperty cmdlet creates a new property for a specified item and sets its value. Typically, this cmdlet is used to create new registry values, because registry values are properties of a registry key item.



3.3.1 Reading Registry Objects with PowerShell
Get-ChildItem - Reads sub keys from the input value
Get-ChildItem HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run 

Get-ChildItem HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\ 
The returns nothing because it is listing the sub keys of \Run.
Run has no sub keys, only values.

Returns sub keys of \CurrentVersion
Get-Item - Reads the value of the inputted object
Get-item HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
Notice how the output of the command is different than Get-ChildItem.

It reads key values, not sub keys.



3.3.2 Creating Registry objects with Powershell
New-Item - Creates a new sub key associated within a hive
New-Item "HKLM:\Software\Microsoft\Office\14.0\Security\Trusted Documents\TrustRecords" -Force
Creates a new sub key in Trusted Documents for document.doc

Trusted documents is for documents with active content i.e. embedded macros.
New-ItemProperty - Creates a new value associated with a sub key
New-ItemProperty "HKLM:\Software\Microsoft\Office\14.0\Security\Trusted Documents\TrustRecords" -Name "%USERPROFILE%Downloads/test-document.doc" -PropertyType Binary -Value ([byte[]](0x30,0x31,0xFF)) 

New-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run -Name Test -PropertyType String -Value C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe 
Creates a new value in the \TrustRecords key
Creates a value in the \Run key
Outside of the scope of the class but in case you want to know more about that byte array


3.3.3 Modifying Registry objects with PowerShell
Rename-ItemProperty - Modifies a value associated with a sub key
Rename-ItemProperty -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run -Name SecurityHealth -NewName Test
Remove-ItemProperty - Removes a value associated with a sub key
Remove-ItemProperty -Path "HKLM:\Software\Microsoft\Office\14.0\Security\Trusted Documents\TrustRecords" -Name "%USERPROFILE%Downloads/test-document.doc"
Set-ItemProperty - Change the value of a sub key
Set-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Run -Name Test -Value Bacon.exe


3.4 Sethc.exe Demonstration
Demo: Demonstrate the application of a registry "tweak" via the GUI and CMD-line using sethc.exe.

What is sethc.exe?

Windows contains a feature called stick keys, which is an accessibility feature to help Windows users who have physical disabilities.

It essentially serializes keystrokes instead of pressing multiple keys at a time, so it allows the user to press and release a modifier key, such as Shift, Ctrl, Alt, or the Windows key, and have it remain active until any other key is pressed.

You activate stick keys by pressing the Shift key 5 times. When you activate stick keys, you are launching a file, C:\Windows\System32\sethc.exe, which executes as SYSTEM.

While this exploit is protected by current AV, you still might see it in customer networks who don’t follow DISA STIGs.



Create a new Registry key using PowerShell
This will create a backdoor onto a box which will trigger Windows Defender. So first we need to disable it.
Disable Windows Defender Real Time Protection
Set-MpPreference -DisableRealtimeMonitoring $TRUE
Sometimes, the previous command may not work as expected. In such cases, you can follow these steps:
Click the Windows button in the lower-left corner of your desktop.
Navigate to "Virus & threat protection."
Under "Virus & threat protection settings," click "Manage settings."
Finally, toggle off "Real-Time protection." These steps will help you turn off real-time protection using the Windows Security interface.
Create a new Registry key using New-Item in PowerShell
new-item "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe"
Create a new Registry key property using New-ItemProperty in PowerShell
New-ItemProperty -path "HKLM:\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe" -Name Debugger -Type String -Value C:\Windows\System32\cmd.exe
Calling our new value in order to privilege escalate
Rapidly press the SHIFT key 5 times

A command shell opens

Type whoami

You should be army\john.huntsman or whoever your user account is

Now log off the system and press the SHIFT key 5 times

A command shell opens

Type whoami

Now you are NT AUTHORITY\SYSTEM

As SYSTEM user, we could open the Registry and copy the SAM database to access password hashes
Create a network share to Sysinternals
net use * http://live.sysinternals.com
The net use command allows us to map a network location and navigate it like it is a local directory.

You can run net use and it will show detailed information about currently mapped drives and devices.

Additionally you can run net use /help for a listing of most common parameters.

Type *autoruns -accepteula*
If we are running remote operations on a target, if we run a SysInternals command for the first time, we will be prompted by a popup to accept the EULA. The -accepteula switch will prevent this and prevent us from being discovered.
Using Autoruns to view the created Registry key
In Autoruns, click on the Image Hijacks Button
Right click on the sethc.exe and select Jump to Entry…​
Right click on the sethc.exe key and select export
Name the file "Totally Legit Windows Update" and save it to your Desktop
Delete the sethc.exe key using the GUI

###############################END###############################
###############################BLANK###############################
4. Powershell PSDrives
What is a PowerShell PSDrive?
A Windows PowerShell drive is a data store location that you can access like a file system drive in Windows PowerShell.

You cannot access them by using other Windows tools, such as File Explorer or Cmd.exe.

Basically, a PSDrive creates a temporary or permanent way for PowerShell to navigate the registry just like you could navigate the file system.

Another way to create/use a remote connection is to use PSDrive (PowerShell Drive).

A group of providers connect different forms of storage to PowerShell and make them look like and perform like a file system.



Finding current PSDrives
Get-PSDrive
To create a new Windows PowerShell drive, you must supply three parameters:

A Name for the drive (you can use any valid Windows PowerShell name)

The PSProvider (use "FileSystem" for file system locations, "Registry" for registry locations, and it could also be a shared folder on a remote server.)

The Root, that is, the path to the root of the new drive.



Table 3. What are PSDrive Providers
Providers: "Registry" - for registry locations, "FileSystem" for file system locations

Certificate: for any installed digital certificates

Alias: for aliases used by PowerShell

Function: Provides access to the functions defined in PowerShel

Variable: supports the variables that PowerShell creates, including the automatic variables, the preference variables, and the variables that you create.

WSMAN: (Web Services Manager)lets you add, change, clear, and delete WS-Management configuration data on local or remote computers.

Environment: Provides access to the Windows environment variable.

Table 4. What are PSDrive Names?
PSDrive uses Names for each drive.

Names of the drive can be longer than just a letter and can be as explanatory as you want.

PowerShell needs a : (colon) after the name to change directory to the drive.

Table 5. What’s this all a Root?
Root specifies the data store location to which a PowerShell drive is mapped of a local computer, a remote computer, or even a website.

When Root is a UNC (Universal Naming Convention) path, such as \\Server\Share, the credential specified in the value of the Credential parameter is used to create the PSDrive.

Show all Environmental Variables in the Env: directory
Get-ChildItem Env:
Show all Environmental Variables in the GUI
Control Panel > System > click on Advanced system settings.
Then click on Environmental Variables.
The results should be the same as GCI ENV.
Make a directory for our demo
mkdir demo
Creating a PSDrive
New-PSDrive -Name Demo -PSProvider FileSystem -Root c:\Demo   #Review command: Get-Help New-PSDrive for this syntax.
Show the difference from changing directory to C:\Demo and Demo:
cd C:\Demo
cd Demo:
Creating an invalid PSDrive
New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USER
This will create an error. Try and mount the new drive and watch it error out. PowerShell will allow you to create a directory with a Root location that doesn’t exist.
Mounting invalid PSDrive
gci HKU:
Get-ChildItem HKU:
Delete the bad PSDrive
Remove-PSDrive HKU
Now create the drive correctly
New-PSDrive -Name HKU -PSProvider Registry -Root HKEY_USERS
Changing directories with PowerShell
cd Registry::HKEY_LOCAL_MACHINE 
cd HKU: 
C: 
Changing directories the default way in PowerShell
Changing directories after mounting with PSDrive
Changing back to c:\ drive
PSDrive Can be used to create shortcuts to commonly used file locations too.
New-PSDrive -Name Desktop -PSProvider FileSystem -Root C:\users\student\Desktop
cd Desktop:
Creating a Shortcut to the Run Key
New-PSDrive -Name HKLM-Run -PSProvider Registry -Root HKEY_Local_Machine\SOFTWARE\Microsoft\Windows\CurrentVersion\Run
cd HKLM-Run:
We can also map network shares with New-PSDrive.
Emulating net use functionality with New-PSDrive
[String]$WebDAVShare = '\\live.sysinternals.com\Tools'          
New-PSDrive -Name S -PSProvider FileSystem -Root $WebDAVShare   
cd S:                                                           
Creating a string variable of '\\live.sysinternals.com\Tools' as if we do not it will fail out.
Using our new Variable $WebDAVShare we can now successfully create the drive.
Changing directories to our link '\\live.sysinternals.com\Tools'.
Map to an Internal Server
New-PSDrive -Name FileServer -PSProvider FileSystem -Root "\\file-server\warrior share"
Disable the task manager using the Regedit GUI
In regedit, navigate to HKCU/SOFTWARE/MICROSOFT/WINDOWS/CURRENTVERSION/POLICIES
Make a new key called "System" by right clicking and selecting New then Key
Add a new DWORD value to that key called "DisableTaskMgr" by right clicking and selecting New then DWORD
Double click the new value and change the 0 to a 1
Try to open task Manager (you will see that you cannot)
Remove the new key by right clicking the key and selecting delete
###############################END###############################
###############################BLANK###############################
5. Registry Locations of Interest


5.1 Do I need to remember all of the locations in the Registry?
The Registry in a Windows 10 Computer has over 3 million entries; it is impossible to know them all.

It is more important to understand the concepts supporting the Windows Registry than to know millions of keys.



5.2 Registry Changes
Changes to the registry often require a restart, as many programs read the registry values upon load.

Whether the entire system needs to be restarted, or just a program, depends on the registry setting changes.

Some changes do take effect immediately, as we saw with the disable taskmgr key that was created.

It is also important to note that some parts of the registry are always loaded into memory.



5.3 Forensically Relevant Keys
These are keys that hold any type of information that can be used to gather intelligence or track events.

These are some but not all of the keys that can be considered relevant to you or your mission set.

SANS Registry Cheat Sheet

Why do we care?
We are looking for keys that can be used for Persistence

Persistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access

As well as Privilege Escalation.

Privilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network.


Microsoft Edge Internet URL history and Browser Artifacts and Forensics

HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\AppContainer\Storage\microsoft.microsoftedge_8wekyb3d8bbwe\Children\001\Internet Explorer\DOMStorage



USB history / USB Forensics

HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Enum\USB

This registry key contains information about all USB devices that have been connected to the system at some point, regardless of whether they are currently connected or not. It includes information about the USB controllers, hubs, and individual devices. Each device is typically identified by a unique identifier (like a device instance path or hardware ID).

HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Enum\USBSTOR

This registry key specifically deals with USB storage devices, such as USB flash drives, external hard drives, etc. It contains information about connected USB storage devices, including details like device instance paths, hardware IDs, and other configuration information.



Recent MRU history / MRU in forensics
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePidlMRU

MRU is the abbreviation for most-recently-used.

This key maintains a list of recently opened or saved files via typical Windows Explorer-style common dialog boxes (i.e. Open dialog box and Save dialog box).

For instance, files (e.g. .txt, .pdf, htm, .jpg) that are recently opened or saved files from within a web browser (including IE and Firefox) are maintained.



Recent Files with LNK files
HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs



Windows User Profiles User Account Forensics

HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList



Saved Network Profiles and How to decode Network history
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\NetworkList\Profiles



Windows Virtual Memory and why it is important
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management

This key maintains Windows virtual memory (paging file) configuration.

The paging file (usually C:\pagefile.sys) may contain evidence/important information that could be removed once the suspect computer is shutdown.



Recent search terms using Windows default search and Cortana
HKEY_CURRENT_USER\Software\Microsoft\Windows Search\ProcessedSearchRoots

Index of Search results by SID

HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Search

Recent files searched



5.4 Registry locations that can be utilized for persistence
Persistence According to MITRE

Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder - MITRE

Table 6. System-wide and per-user autoruns
HKLM\Software\Microsoft\Windows\CurrentVersion\Run

HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce

HKU\<SID>\Software\Microsoft\Windows\CurrentVersion\Run

HKU\<SID>\Software\Microsoft\Windows\CurrentVersion\RunOnce

HKLM\SYSTEM\CurrentControlSet\services

HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders

HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders

HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon



5.5 Critical Registry Locations
These are keys that have value for red and blue teams to be taken advantage of.

HKLM\BCD00000000

Replacement of old boot.ini file

HKLM\SAM\SAM

Use "psexec -s -i regedit" from administrator cmd.exe to view the SAM

It opens a new regedit.exe window with system permissions

PSEXEC is a SYSINTERNALS tool.
HKU\<SID>\Software\Policies\Microsoft\Windows\System\Scripts

Group policy Logon/Logoff Scripts defined here
###############################END###############################
###############################BLANK###############################
6. Security
Each key in the registry of Windows NT versions can have an associated Security Descriptor.

The security descriptor contains an Access Control List (ACL) that describes which user groups or individual users are granted or denied access permissions.

An ACL is a list of Access Control Entries (ACE). The security descriptor can be explicit or inherited from a parent object.

Each ACE in an ACL identifies a trustee and specifies the access rights allowed, denied, or audited for that trustee.

The security descriptor for a securable object can contain two types of ACLs: a DACL and a SACL.

A Discretionary Access Control List (DACL) identifies the trustees that are allowed or denied access to a secured object.

A System Access Control List (SACL) enables administrators to log attempts to access a secured object.

Table 7. Registry permissions
Permission

Description

Query Value

The right to read the registry key value.

Set Value

The right to write a new value

Create Subkey

The right to create subkeys.

Enumerate

Subkeys Allow the enumeration of subkeys.

Notify

The right to request change notifications for registry keys or subkeys.

Create Link

Reserved by the operating system.

Delete

The right to delete a key.

Write DACL

The right to modify permissions of the container’s DACL.

Write Owner

The right to modify the container’s owner.

Read Control

The right to read the DACL.

Special ACEs on the security descriptor can also implement Mandatory Integrity Control for the registry key and subkeys.

A process running at a lower integrity level cannot write, change or delete a registry key/value, even if the account of the process has otherwise been granted access through the ACL.

An example would be if Internet Explorer is running in Protected Mode and can read medium and low integrity registry keys/values of the currently logged on user, but it can only modify low integrity keys.
Windows Resource Protection uses security to deny Administrators and the system WRITE access to some sensitive keys to protect the integrity of the system from malware and accidental modification.
###############################END###############################
##############################################################ADS##############################################################
###############################BLANK###############################
1. Alternate Data Streams
ADS was first introduced to NTFS in Windows NT 3.1 and was Microsoft’s attempt at implementing filesystem forks in order to maintain compatibility with other filesystems like Apple’s HFS+ and Novell’s NWFS and NSS.

In NTFS – files consists of attributes, security settings, mainstreams and alternate streams. By default, only the mainstream is visible.

ADS has been used to store metadata, like file attributes, icons, image thumbnails.

Great way to hide data using NTFS.

Can be scanned by antivirus (Windows Defender Smartscreen is ADS aware).

Does not change the MD5 hash of the file.

Deleted once copied to a fat32.

Cannot be disabled.

[filename.extension]:[alternate_stream_name]:$DATA

###############################END###############################
###############################BLANK###############################
2. Alternate Data Streams in Command Prompt
The demonstrations below are the basics of creating and viewing alternate data streams on a file and directory. The ADS demo will need a elevated command prompt (cmd.exe) and also an elevated PowerShell or PowerShell ISE window. You should understand that just because something isn’t viewable by normal means, doesn’t mean something isn’t hidden. It thus becomes important to understand the commands used to enumerate, recognize indicators, and list contents for ADS.



Perform steps below in an elevated CMD shell.

1. Creating a regular data stream on a file
C:\windows\system32>echo Always try your best > reminder.txt 

C:\windows\system32>dir reminder.txt 
 Directory of C:\windows\system32
 02/27/2021 07:13 PM                 25 reminder.txt
                1 File(s)            25 bytes
                0 Dir(s) 20,060,768,688 bytes free

C:\windows\system32>type reminder.txt 
Always try your best
echo content Always do your best into new file called reminder.txt.
dir, for files, displays the file name extension and size in bytes.
type displays contents of a text file, showing Always do your best.


2. Creating an Alternate Data Stream on a file
C:\windows\system32>echo social security numbers > reminder.txt:secret.info 

C:\windows\system32>dir reminder.txt 
 Directory of C:\windows\system32
 02/27/2021 07:13 PM                  23 reminder.txt
                 1 File(s)            23 bytes
                 0 Dir(s) 20,060,712,960 bytes free

C:\windows\system32>type reminder.txt 
Always try your best
echo content social security numbers into the ADS :secret.info of reminder.txt.
dir shows no visible change to reminder.txt even after previous added ADS content.
type shows no visible change to content of reminder.txt even after previous added ADS content.
Refs: dir / echo / type



3. Viewing an Alternate Data Stream on a file.
C:\windows\system32>more < reminder.txt:secret.info 
social security numbers

C:\windows\system32>notepad reminder.txt:secret.info 

C:\windows\system32>dir /R reminder.txt 
 Directory of C:\windows\system32
 02/27/2021 07:13 PM                   23 reminder.txt
                                       26 reminder.txt:secret.info:$DATA
                1 File(s)              23 bytes
                0 Dir(s)   20,060,557,312 bytes free

C:\windows\system32>type reminder.txt:secret.info 
The filename, directory name, or volume label syntax is incorrect.
Read contents of reminder.txt:secret.info into more, showing ADS content social security numbers.
Shows another way to view ADS content using notepad.
dir /R displays the ADS info (not the same as listing the ADS contents however). $DATA will be discussed later.
Unfortunately, some commands and applications like the type are unable to list ADS content.


4. Creating and Viewing an Alternate Data Stream on a directory
C:\windows\system32>mkdir kids 

C:\windows\system32>echo top-secret information > kids:hidden.txt 

C:\windows\system32>dir /R kids 
 Directory of C:\windows\system32\kids
 02/27/2021 07:29 PM      <DIR>           .
                                       25 .:hidden.txt:$DATA
 02/27/2021 07:29 PM      <DIR>           ..
               0 File(s)                0 bytes
               2 Dir(s)    20,060,160,000 bytes free

C:\windows\system32>more < kids:hidden.txt 
top-secret information
mkdir creates a directory called kids.
echo writes content top-secret information in ADS to kids:hidden.txt.
dir /R shows ADS info for kids directory. Notice the ADS hidden.txt created earlier and the main stream $DATA.
more shows ADS contents of kids:hidden.txt and we see top-secret information.
###############################END###############################
###############################BLANK###############################
3. Alternate Data Streams in PowerShell
1. Creating a regular data stream on a file.
PS C:\windows\system32>echo "Always do your best" > reminder.txt 

PS C:\windows\system32>Get-ChildItem .\reminder.txt 
    Directory: C:\windows\system32
Mode                LastWriteTime        Length  name
----                -------------        ------  ----
-a----           2/28/2021  2:40 AM          44   reminder.txt

PS C:\windows\system32>Get-Content reminder.txt 
Always do your best
echo content Always do your best into a new file called reminder.txt.
Get-ChildItem, just like dir example, will show a file’s attributes, last modified time (LastWriteTime), size (Length), and name.
Get-Content shows the content of the file reminder.txt: Always do your best.


2. Creating an Alternate Data Stream on a file.
PS C:\windows\system32>Set-Content .\reminder.txt -Value "social security numbers" -Stream secret.info 

PS C:\windows\system32>Get-Childitem reminder.txt 
    Directory: C:\windows\system32
Mode                LastWriteTime        Length  name
----                -------------        ------  ----
-a----           2/28/2021  2:41 AM          44   reminder.txt

PS C:\windows\system32>Get-Content reminder.txt 
Always do your best
Set-Content writes new or replaces existing content in a file; Using -Value and -Stream to create an ADS on reminder.txt.
Get-Childitem shows no visible change to reminder.txt even after previous added ADS content.
Get-Content shows no visible change to content of reminder.txt even after previous added ADS content.


3. Viewing an Alternate Data Stream on a file.
PS C:\windows\system32>Get-Item reminder.txt -Stream * 
PSPath        : Microsoft.PowerShell.Core\FileSystem::C:\windows\system32\reminder.txt::$DATA
PSParentPath : Microsoft.PowerShell.Core\FileSystem::C:\windows\system32
PSChildName : reminder.txt::$DATA
PSDrive       : C
PSProvider    : Microsoft.PowerShell.Core\FileSystem
PSIsContainer : False
FileName      : C:\windows\system32\reminder.txt 
Stream        : :$DATA 
Length        : 44

PSPath        : Microsoft.PowerShell.Core\FileSystem::C:\windows\system32\reminder.txt:secret.info
PSParentPath  : Microsoft.PowerShell.Core\FileSystem::C:\windows\system32
PSChildName  : reminder.txt:secret.info
PSDrive       : C
PSProvider    : Microsoft.PowerShell.Core\FileSystem
PSIsContainer : False
FileName      : C:\windows\system32\reminder.txt
Stream        : secret.info 
Length        : 25

PS C:\windows\system32>Get-Content reminder.txt -Stream secret.info 
social security numbers
Get-Item with the -Stream option allows us to see all streams for *reminder.txt.
FileName property provides the full path info for reminder.txt.
Stream property lists $DATA which is the main stream and commonly expected on most files. $DATA is the actual content.
Stream property lists secret.info which is an ADS to be investigated since it is outside the norm.
Get-Content with option and value -Stream secret.info gets us our ADS content, social security numbers.
The last command can be further improved to list only the FileName and Stream properties.
Get-Item reminder.txt -Stream * | select FileName,Stream
###############################END###############################
###############################BLANK###############################
4. Malicious Alternate Data Streams
In this demonstration, we will show how malicious logic can be embedded in an Alternate Data Stream to execute on a system. There are a plethora of ways a malicious ADS could be triggered to exploit vulnerabilities in a system and grant access or establish persistence for a bad guy.

1. Creating a Malicious Alternate Data Stream
PS C:\windows\system32> Write-Output "Nothing to see here!" > test.txt 

PS C:\windows\system32>Add-Content -Path .\test.txt -Value 'Dim oShell' -Stream 'secret.vbs' 
PS C:\windows\system32>Add-Content -Path .\test.txt -Value 'Set oShell = Wscript.CreateObject ("Wscript.Shell")' -Stream 'secret.vbs'
PS C:\windows\system32>Add-Content -Path .\test.txt -Value 'oShell.run "cmd /k CD C:\Program Files & ping 8.8.8.8" ,1 , true ' -Stream 'secret.vbs'

PS C:\windows\system32>Get-Content .\test.txt 
Nothing to see here!

PS C:\windows\system32>Get-Content .\test.txt -Stream secret.vbs 
Dim oShell
Set oShell = Wscript.CreateObject ("Wscript.Shell")
oShell.run "cmd /k CD C:\Program Files & ping 8.8.8.8" ,1 , true
Write-Output functions like echo and sends the content Nothing to see here! to a new file called test.txt.
Add-Content lines add some Visual Basic Studio (VBS) code to the ADS secret.vbs on test.txt.
Get-Content shows no visible change to test.txt even after previous added ADS content.
With -Stream secret.vbs we see our ADS content.


2. Executing a Malicious Alternate Data Stream
PS C:\windows\system32>wscript .\test.txt:secret.vbs 
_opens CMD.exe and pings google_
wscript part of Windows Script Host allows us to run the VBS code contained in .\test.txt:secret.vbs


3. Output
Pinging 8.8.8.8 with 32 bytes of data: 
Reply from 8.8.8.8: bytes=32 time=6ms TTL 113
Reply from 8.8.8.8: bytes=32 time=6ms TTL 113
Reply from 8.8.8.8: bytes=32 time=5ms TTL 113
Reply from 8.8.8.8: bytes=32 time=5ms TTL 113

Ping statistics for 8.8.8.8:
    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),
Approximate round trip in milli-seconds:
    Minimum = 5ms, Maximum = 6ms, Average = 5 master

C:\Program Files>
Output of VBS code is a simple ping to Google. Not so malicious after all…​


3. Does file hash change if we alter the Alternate Data Stream?
C:\Program Files>cd C:\windows\system32 

C:\windows\system32>certutil -hashfile test.txt MD5 
MD5 hash of test.txt:
cb73eeca4f440ee9c6e16ad3cfddb10a
CertUtil: -hashfile command completed successfully.

C:\windows\system32>notepad test.txt:secret.vbs 
_enter some extra code or remove some code_

C:\windows\system32>more < test.txt:secret.vbs 
Dim oShell
Set oShell = Wscript.CreateObject ("Wscript.Shell")
oShell.run "cmd /k CD C:\Program Files & ping 8.8.8.8" ,1 , true
words and such

C:\windows\system32>certutil -hashfile test.txt MD5 
MD5 hash of test.txt:
cb73eeca4f440ee9c6e16ad3cfddb10a
CertUtil: -hashfile command completed successfully.
Change directories to C:\windows\system32 where test.txt is.
Add or remove some code to :secret.vbs with notepad.
Verify changes to ADS content with more.
Runs certutil again to show the hash hasn’t changed.
Changing the ADS content of a file does not affect the file hash. Only changing the actual content on the main stream ($DATA) will result in a change in the file hash. This is important because an operator cannot assume a file was not tampered with just because the file hash has not changed.

###############################END###############################
###############################BLANK###############################
#1
Primer_Registry_1
What Windows registry path is the Volatile Hive?
HKLM\HARDWARE

#2
Primer_Registry_2
What registry key creates the Wow6432Node to represent 32-bit applications that run on a 64-bit version of Windows?
HKEY_LOCAL_MACHINE\SOFTWARE


#3
Primer_Registry_3
In what registry path are the BOOT_START drivers located?
HKLM\SYSTEM\CurrentControlSet\Services

#4
Primer_Registry_4
What start value do BOOT_START drivers have in the registry?
0x0


#5
Primer_Registry_5
During kernel initialization, what registry location is read containing all SYSTEM_START drivers?
HKLM\SYSTEM\CurrentControlSet\Services


#6
Primer_Registry_6
SERVICE_AUTO_START drivers and services are loaded after kernel initialization. What start value do they have in the registry?
0x02


#7
Primer_Registry_7
What start value do SERVICE_DEMAND_START drivers and services have in the registry?
0x3

#8
Primer_Registry_8
When accessing a remote registry which are the only 2 accessible HKEYs?
SYNTAX Hive, Hive
HKLM, HKU

#9
Primer_Registry_9
What PowerShell cmdlet will list currently mapped drives?
get-psdrive


#10
Primer_Registry_10
What is the native Windows GUI tool for managing the registry?
regedit

###############################END###############################
###############################BLANK###############################
#1
Windows_Registry_Basics_1
What registry hive contains all machine settings?
HKLM

#2
Windows_Registry_Basics_2
What registry hive contains all user settings?
HKU

#3
Windows_Registry_Basics_3
What registry hive contains only the currently logged-in user's settings?
HKCU

#4
Windows_Registry_Basics_4
The HKEY_CURRENT_USER registry hive is a symbolic link to another registry subkey. What is the subkey that it is linked to?
Flag format: HIVE\SID.........................
Reminder: All challenges are done using Workstation2.
reg query HKU
HKEY_USERS\S-1-5-21-2881336348-3190591231-4063445930-1002

#5
Windows_Registry_Basics_5
What PowerShell command will list all the subkeys and contents in the current directory and/or will list all the subkeys and 
the contents of a directory you specify?
get-childitem


#6
Windows_Registry_Basics_6
What PowerShell command will list only the contents of a registry key or subkey?
get-item


#7
Windows_Registry_Basics_7
What registry subkey runs every time the machine reboots? The flag is the full path, using PowerShell.
Flag format: FULL\PATH\ALL\CAPS
HKEY_LOCAL_MACHINE\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN


#8
Windows_Registry_Basics_8
What registry subkey runs every time a user logs on? The flag is the full path, using PowerShell.
Flag format: FULL\PATH\ALL\CAPS
HKEY_CURRENT_USER\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUN


#9
Windows_Registry_Basics_9
What registry subkey runs a single time, then deletes its value once the machine reboots? The flag is the full path, using PowerShell.
Flag format: FULL\PATH\ALL\CAPS
HKEY_LOCAL_MACHINE\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUNONCE


#10
Windows_Registry_Basics_10
What registry subkey runs a single time, then deletes its value when a user logs on? The flag is the full path, using PowerShell.
Flag format: FULL\PATH\ALL\CAPS
HKEY_CURRENT_USER\SOFTWARE\MICROSOFT\WINDOWS\CURRENTVERSION\RUNONCE


#11

#12

#13

#14

#15

#16

#17

###############################END###############################
###############################BLANK###############################
#1
Primer_NTFS_1
The ____ determines how the data is stored on disk.
format

#2
Primer_NTFS_2
What are NTFS partition sectors grouped into?
cluster


#3
Primer_NTFS_3
What contains the metadata about all of the files and directories on a NTFS partition?
MFT

#4
Primer_NTFS_4
NTFS files are collections of what?
attributes

#5
Primer_NTFS_5
Which NTFS attribute would store an alternate data stream?
$DATA


#6
Primer_NTFS_6
Which NTFS attribute holds information about a file's encrypted attributes?
$LOGGED_UTILITY_STREAM

#7
Primer_NTFS_7
Which NTFS attribute that is composed of the file security and access control properties?
$SECURITY_DESCRIPTOR

#8
Primer_NTFS_8
In NTFS, what is the type id, in hex, of the attribute that actually stores a NTFS files contents?
0x80

#9
Primer_NTFS_9
In NTFS what is the maximum number of bytes a MFT entry (containing the entirety of a file) 
can contain to be considered "Resident Data"?
1024

#10
Primer_NTFS_10
NTFS permissions can be a assigned to a filesystem object in two ways. Which way is intentionally assigned on the file or folder?
explicit

#11
Primer_NTFS_11
NTFS permissions can be a assigned to a filesystem object in two ways. Which way is the results of an object being assigned permissions
as the result of being the child of another object?
inherited

#12
Primer_NTFS_12
Which NTFS file level permission is missing from the following list? Write, Read & Execute, Modify, Full Control
read

#13
Primer_NTFS_13
Which NTFS folder level permission is missing from the following list?: Read, Write, Read & Execute, Modify, Full control
List Folder Contents

#14
Primer_NTFS_14
Which NTFS file level permission permits changing the contents of a file, deleting the file but does not allow the ability to change the permissions on the file?
modify

#15
Primer_NTFS_15
Which NTFS folder level permission allows changing permissions?
full control

#16
Primer_NTFS_16
Which NTFS attribute stores the file times of an object?
$STANDARD_INFORMATION

#17
Primer_NTFS_17
What CLI command will only show the letters of attached drives? **Hint command is 3 words
fsutil fsinfo drives

#18

#19

#20

#21


###############################END###############################


##############################################################END OF DAY 2##############################################################











###############################QUESTIONS###############################



###############################BLANK###############################
###############################END###############################

###############################BLANK###############################
###############################END###############################





##############################################################DAY 1##############################################################
##############################################################END OF DAY 1##############################################################
